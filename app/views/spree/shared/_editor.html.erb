<% content_for :head do %>
	<%= stylesheet_link_tag 'editor' %>
<% end %>

<div class="editor-mask-container">
	<div class="editor-mask"></div
	<div class="editor-mask-label"><%= t("editor.loading") %></div
</div>

<!-- Skin CSS file -->
<link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.8.2r1/build/assets/skins/sam/skin.css">
<!-- Utility Dependencies -->
<script src="http://yui.yahooapis.com/2.8.2r1/build/yahoo-dom-event/yahoo-dom-event.js"></script>
<script src="http://yui.yahooapis.com/2.8.2r1/build/element/element-min.js"></script>
<!-- Needed for Menus, Buttons and Overlays used in the Toolbar -->
<script src="http://yui.yahooapis.com/2.8.2r1/build/container/container_core-min.js"></script>
<script src="http://yui.yahooapis.com/2.8.2r1/build/menu/menu-min.js"></script>
<script src="http://yui.yahooapis.com/2.8.2r1/build/button/button-min.js"></script>
<!-- Source file for Rich Text Editor-->
<script src="http://yui.yahooapis.com/2.8.2r1/build/editor/editor-min.js"></script>

<%= javascript_include_tag 'jquery.ocupload' %>

<script type="text/javascript" charset="utf-8">
	var <%= editor_id %>_editor = new YAHOO.widget.Editor('<%= editor_id %>', {
		height: '350px',
		width: '790px',
		animate: true,
		handleSubmit: true,
		toolbar: {
			collapse: true,
			titlebar: false,
			draggable: false,
			buttonType: 'advanced',
			buttons: [
			    { group: 'fontstyle', label: '<%= t("editor.font_name_and_size") %>',
			        buttons: [
			            { type: 'select', label: 'Arial', value: 'fontname', disabled: true,
			                menu: [
			                    { text: 'Arial', checked: true },
			                    { text: 'Arial Black' },
			                    { text: 'Comic Sans MS' },
			                    { text: 'Courier New' },
			                    { text: 'Lucida Console' },
			                    { text: 'Tahoma' },
			                    { text: 'Times New Roman' },
			                    { text: 'Trebuchet MS' },
			                    { text: 'Verdana' }
			                ]
			            },
			            { type: 'spin', label: '13', value: 'fontsize', range: [ 9, 75 ], disabled: true }
			        ]
			    },
			    { type: 'separator' },
			    { group: 'textstyle', label: '<%= t("editor.font_style") %>',
			        buttons: [
			            { type: 'push', label: 'Bold CTRL + SHIFT + B', value: 'bold' },
			            { type: 'push', label: 'Italic CTRL + SHIFT + I', value: 'italic' },
			            { type: 'push', label: 'Underline CTRL + SHIFT + U', value: 'underline' },
			            { type: 'separator' },
			            { type: 'push', label: 'Subscript', value: 'subscript', disabled: true },
			            { type: 'push', label: 'Superscript', value: 'superscript', disabled: true },
			            { type: 'separator' },
			            { type: 'color', label: 'Font Color', value: 'forecolor', disabled: true },
			            { type: 'color', label: 'Background Color', value: 'backcolor', disabled: true },
			            { type: 'separator' },
			            { type: 'push', label: 'Remove Formatting', value: 'removeformat', disabled: true },
			            { type: 'push', label: 'Show/Hide Hidden Elements', value: 'hiddenelements' }
			        ]
			    },
			    { type: 'separator' },
			    { group: 'alignment', label: '<%= t("editor.alignment") %>',
			        buttons: [
			            { type: 'push', label: 'Align Left CTRL + SHIFT + [', value: 'justifyleft' },
			            { type: 'push', label: 'Align Center CTRL + SHIFT + |', value: 'justifycenter' },
			            { type: 'push', label: 'Align Right CTRL + SHIFT + ]', value: 'justifyright' },
			            { type: 'push', label: 'Justify', value: 'justifyfull' }
			        ]
			    },
			    { type: 'separator' },
			    { group: 'parastyle', label: '<%= t("editor.paragraph_style") %>',
			        buttons: [
			        { type: 'select', label: 'Normal', value: 'heading', disabled: true,
			            menu: [
			                { text: 'Normal', value: 'none', checked: true },
			                { text: 'Header 1', value: 'h1' },
			                { text: 'Header 2', value: 'h2' },
			                { text: 'Header 3', value: 'h3' },
			                { text: 'Header 4', value: 'h4' },
			                { text: 'Header 5', value: 'h5' },
			                { text: 'Header 6', value: 'h6' }
			            ]
			        }
			        ]
			    },
			    { type: 'separator' },
			    { group: 'indentlist', label: '<%= t("editor.indenting_and_lists") %>',
			        buttons: [
			            { type: 'push', label: 'Indent', value: 'indent', disabled: true },
			            { type: 'push', label: 'Outdent', value: 'outdent', disabled: true },
			            { type: 'push', label: 'Create an Unordered List', value: 'insertunorderedlist' },
			            { type: 'push', label: 'Create an Ordered List', value: 'insertorderedlist' }
			        ]
			    },
			    { type: 'separator' },
			    { group: 'insertitem', label: '<%= t("editor.insert_item") %>',
			        buttons: [
			            { type: 'push', label: 'HTML Link CTRL + SHIFT + L', value: 'createlink', disabled: true },
			            { type: 'push', label: '<%= t("editor.insert_image") %>', value: 'insertimage' }
			        ]
			    }
			]
		}
	});

	<%= editor_id %>_editor.on('toolbarLoaded', function() {
		var imageUploadConfig = {
			type: 'push',
			label: '<%= t("editor.upload_image") %>',
			value: 'imageUpload'
		};
		<%= editor_id %>_editor.toolbar.addButtonToGroup(imageUploadConfig, 'insertitem');

		var fileUploadConfig = {
			type: 'push',
			label: '<%= t("editor.upload_file") %>',
			value: 'fileUpload'
		};
		<%= editor_id %>_editor.toolbar.addButtonToGroup(fileUploadConfig, 'insertitem');
	});

	<%= editor_id %>_editor.addListener('editorContentLoaded', function() {
		$(".yui-toolbar-imageUpload").upload({
			name: 'content_image[attachment]',
			action: '/content_images',
			enctype: 'multipart/form-data',
			params: {'content_image[viewable_type]': '<%= object.class.name %>', 'content_image[viewable_id]': '<%= object.id %>'},
			autoSubmit: true,
			onSubmit: function() {
				$(".editor-mask-container").addClass("active");
			},
			onComplete: function(image_src) {
				var img_html = "<img src='"+image_src+"'/>";
				<%= editor_id %>_editor.execCommand('inserthtml', img_html);
				$(".editor-mask-container").removeClass("active");
			}
		});

		$(".yui-toolbar-fileUpload").upload({
			name: 'content_file[attachment]',
			action: '/content_files',
			enctype: 'multipart/form-data',
			params: {'content_file[viewable_type]': '<%= object.class.name %>', 'content_file[viewable_id]': '<%= @object.id %>'},
			autoSubmit: true,
			onSubmit: function() {
				$(".editor-mask-container").addClass("active");
			},
			onComplete: function(file_url_and_name) {
				var file_url = file_url_and_name.split(",")[0];
				var file_name_original = file_url_and_name.split(",")[1];
				$(".editor-mask-container").removeClass("active");
				var file_name = prompt('<%= t("editor.enter_file_name") %>', file_name_original);
				var link_html = "<a href='"+file_url+"'/>"+file_name+"</a>";
				<%= editor_id %>_editor.execCommand('inserthtml', link_html);
			}
		});
	});

	<%= editor_id %>_editor.render();

	$("#<%= editor_id %>_switch_simple, #<%= editor_id %>_switch_rich").click(function() {
		$("#<%= editor_id %>_switch_simple, #<%= editor_id %>_switch_rich").toggle();
		return false;
	});
	$("#<%= editor_id %>_switch_simple").click(function() {
		<%= editor_id %>_editor.saveHTML();

		var fc = <%= editor_id %>_editor.get('element').previousSibling,
		    el = <%= editor_id %>_editor.get('element');

		YAHOO.util.Dom.setStyle(fc, 'position', 'absolute');
		YAHOO.util.Dom.setStyle(fc, 'top', '-9999px');
		YAHOO.util.Dom.setStyle(fc, 'left', '-9999px');
		<%= editor_id %>_editor.get('element_cont').removeClass('yui-editor-container');
		YAHOO.util.Dom.setStyle(el, 'visibility', 'visible');
		YAHOO.util.Dom.setStyle(el, 'top', '');
		YAHOO.util.Dom.setStyle(el, 'left', '');
		YAHOO.util.Dom.setStyle(el, 'position', 'static');
		YAHOO.util.Dom.setStyle(el, 'width', '780px');

		<%= editor_id %>_editor.set('handleSubmit', false);

		return false;
	});
	$("#<%= editor_id %>_switch_rich").click(function() {
		var fc = <%= editor_id %>_editor.get('element').previousSibling,
		    el = <%= editor_id %>_editor.get('element');

		YAHOO.util.Dom.setStyle(fc, 'position', 'static');
		YAHOO.util.Dom.setStyle(fc, 'top', '0');
		YAHOO.util.Dom.setStyle(fc, 'left', '0');
		YAHOO.util.Dom.setStyle(el, 'visibility', 'hidden');
		YAHOO.util.Dom.setStyle(el, 'top', '-9999px');
		YAHOO.util.Dom.setStyle(el, 'left', '-9999px');
		YAHOO.util.Dom.setStyle(el, 'position', 'absolute');
		<%= editor_id %>_editor.get('element_cont').addClass('yui-editor-container');
		<%= editor_id %>_editor._setDesignMode('on');
		<%= editor_id %>_editor.setEditorHTML(<%= editor_id %>_editor.get('textarea').value);

		<%= editor_id %>_editor.set('handleSubmit', true);

		return false;
	});
</script>
